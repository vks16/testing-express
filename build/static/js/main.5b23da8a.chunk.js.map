{"version":3,"sources":["Components/Login.jsx","Components/Signup.jsx","Components/Movie.jsx","App.js","serviceWorker.js","index.js"],"names":["Login","props","useState","login","setLogin","useEffect","logedIn","id","onSubmit","e","pass","email","preventDefault","target","value","user","some","el","Email","password","Password","alert","type","placeholder","name","Signup","signedUp","setSignedUp","console","log","to","pwd1","pwd2","register","Name","PhoneNo","phone","Profession","profession","required","Movie","className","movie","voting","src","poster","alt","title","genre","director","forEach","i","stars","runTime","language","releasedDate","href","MovieList","movies","setMovies","Axios","post","headers","then","res","data","result","catch","err","map","m","key","_id","App","users","setLoginedIn","localStorage","getItem","j","JSON","parse","push","updateStore","setItem","stringify","signIn","bool","component","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.5b23da8a.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\n\n//import axios from 'axios';\n\n\n\nfunction Login(props) {\n\tconst [login, setLogin] = useState(false);\n\t\n\tfunction userExists(email){\n\t\treturn props.user.some((el) => el.Email === email)\n\t}\n\n\tfunction passwordMatch(pass) {\n\t\treturn props.user.some((el) => el.Password === pass)\n\t}\n\n\tfunction checkLogin(e){\n\t\te.preventDefault();\n\t\t\n\t\tif(userExists(e.target.email.value)){\n\t\t\tif(passwordMatch(e.target.password.value)){\n\t\t\t\tsetLogin(true);\n\t\n\t\t\t\t\n\t\t\t}else {\n\t\t\t\t// wrong password\n\t\t\t\talert(\"Invalid Credentials.\");\n\t\t\t}\n\t\t} else {\n\t\t\t// new email redirect to signup.\n\t\t\talert(\"User doesn't exist\")\n\t\t}\n\n\t}\n\n\n\tuseEffect(() => {\n\t\tif (login) {\n\t\t\tprops.logedIn(login);\n\t\t}\n\t})\n\t\n\t\n\n\treturn (\n\t\t<form id=\"login\" onSubmit={checkLogin} >\n\t\t\t<input type=\"email\" placeholder=\"email@example.com\" id=\"email\" name=\"email\" />\n\t\t\t<input type=\"password\" placeholder=\"*******\" id=\"password\" name=\"password\" />\n\t\t\t<input type=\"submit\" value=\"Login\"/>\n\t\t</form>\t\t\n\t)\n}\n\nexport default Login;\n","import React, {useState, useEffect} from 'react';\nimport {Redirect} from 'react-router-dom';\n\nfunction Signup(props) {\n\tconst [signedUp, setSignedUp] = useState(false);\n\n    function createAccount(e) {\n        e.preventDefault();\n        \n        function userExists(email){\n            return props.user.some((el) => el.Email === email)\n        }\n\n        if (e.target.pwd1.value !== e.target.pwd2.value) {\n            alert(\"Mismatch password!\");\n        }else if (userExists(e.target.email.value)){\n            alert(\"Already registered with this email address.\");\n        }else {\n            props.register({\n                Name: e.target.name.value,\n                Password: e.target.pwd1.value,\n                Email: e.target.email.value,\n                PhoneNo: e.target.phone.value,\n                Profession: e.target.profession.value,\n            });          \n\n\t\tsetSignedUp(true);\t\n        }\n    }\n\n\tuseEffect(() => console.log(signedUp), [signedUp]);\n\tif (signedUp) {\n\t\treturn <Redirect to=\"/login\"/>\n\t}\n\n    return (\n\t\n        <form id=\"signup\" onSubmit={createAccount} >\n            <input type=\"text\" placeholder=\"Name\" id=\"name\" name=\"name\" required/>\n            <input type=\"email\" placeholder=\"email@example.com\" id=\"email\" name=\"email\" required/>\n            <input type=\"text\" placeholder=\"Mob. no.\" id=\"phone\" name=\"phone\"/>\n            <select name=\"profession\" id=\"profession\">\n                <option value=\"web_developer\">Web Developer</option>\n                <option value=\"digital_marketing\">Digital Marketing</option>\n                <option value=\"system_admin\">System Administrator</option>\n            </select>\n            <input type=\"password\" placeholder=\"password\" id=\"pwd1\" name=\"pwd1\"/>\n            <input type=\"password\" placeholder=\"confirm password\" id=\"pwd2\" name=\"pwd2\"/>\n\n            <input type=\"submit\" value=\"Signup\"/>\n            \n        </form>\n    )\n}\n\nexport default Signup;\n","import Axios from 'axios';\nimport React, {useState, useEffect} from 'react';\nimport './Movie.css';\n\nfunction Movie(props) {\n\t\n\treturn (\n\t\t<div className=\"movie\">\n\t\t\t<div className=\"movieInfo\">\n\t\t\t\t<div className=\"votes\"> \n\t\t\t\t\t<span>^</span><p>{props.movie.voting}</p><span>V</span>\n\t\t\t\t</div>\n\t\t\t\t<img src={props.movie.poster} alt=\"na\"/>\n\t\t\t\t<div className=\"details\">\n\t\t\t\t<h3>{props.movie.title} </h3>\n\t\t\t\t<p>Genre: {props.movie.genre}</p>\n\t\t\t\t<p>Director: {props.movie.director.forEach((e, i) => {\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\treturn e;\n\t\t\t\t\t}else {\n\t\t\t\t\t\treturn \",\" + e;\n\t\t\t\t\t}\n\t\t\t\t} )} </p>\n\t\t\t\t<p>Starring: {props.movie.stars.forEach((i,e) => \n\t\t\t\t{\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\treturn <span>{e}</span>;\n\t\t\t\t\t}else {\n\n\t\t\t\t\t\treturn <span>{e}</span>;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t)}</p>\n\t\t\t\t<p>{props.movie.runTime} Mins | {props.movie.language} | {props.movie.releasedDate} </p> \n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div className=\"watchButton\">\n\t\t\t <a href=\"https://youtube.com\" className=\"trailer\">Watch Trailer</a>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\n\n\nfunction MovieList() {\n\tconst [movies, setMovies] = useState([{\n        \"_id\": \"5d9448106e6974498e97e844\",\n        \"description\": \"\",\n        \"director\": [\"Prashanth Neel\"],\n        \"writers\": [\"Prashanth Neel\"],\n        \"stars\": [\"Sanjay Dutt,Raveena Tandon,Yash,Srinidhi Shetty\"],\n        \"productionCompany\": [\"Prashanth Neel\"],\n        \"pageViews\": 90,\n        \"upVoted\": [],\n        \"downVoted\": [],\n        \"title\": \"K.G.F: Chapter 2\",\n        \"language\": \"Kannada\",\n        \"runTime\": null,\n        \"releasedDate\": 1601580599,\n        \"genre\": \"action,drama\",\n        \"voted\": [{\n            \"upVoted\": [],\n            \"downVoted\": [],\n            \"_id\": \"5d9448106e6974498e97e846\",\n            \"updatedAt\": 1569998864,\n            \"genre\": \"action\"\n        }, {\n            \"upVoted\": [\"5e1d4475416a070ee7add99c\"],\n            \"downVoted\": [],\n            \"_id\": \"5d9448106e6974498e97e845\",\n            \"updatedAt\": 1569998864,\n            \"genre\": \"drama\"\n        }],\n        \"poster\": \"https://s3.ap-south-1.amazonaws.com/hoblist/movies/poster/1569998864699_K.G.F:_Chapter 2.jpg\",\n        \"totalVoted\": 0,\n        \"voting\": 0\n    }]);\n\tconst data = {\n\t\t\"category\": \"movies\",\n\t\t\"language\": \"kannada\",\n\t\t\"genre\": \"all\",\n\t\t\"sort\": \"voting\"\n\t};\n\tconst config = {\n\t\t\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t\t\"Access-Control-Allow-Origin\": \"*\",\n\t\t\t'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept',\n\t\t\t'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\n\t\t}\n\t};\n\tAxios.post(\"https://hoblist.com/movieList\", data, config)\n\t.then(res => {\n\t\t\n\t\tsetMovies(res.data.result);\t\n\t})\n\t.catch(err => console.log(err));\n\t\n\tuseEffect(() => console.log(\"updated\"), [movies]);\n\t\n\t// {movies.map(m => <Movie key={m._id} movie={m} />)}\n\treturn (\n\t\t<div id=\"movieList\">\n\t\t\t{movies.map(m => <Movie key={m._id} movie={m} />)}\n\t\t</div>\n\t)\n\n}\n\nexport default MovieList;\n","import React, {useState, useEffect} from 'react';\nimport {Link, Route, Switch} from 'react-router-dom';\nimport './App.css'; // fill it\n\nimport Login from './Components/Login';\nimport Signup from './Components/Signup';\nimport MovieList from './Components/Movie';\n\nfunction App() {\n  const [users, ] = useState([]);\n  const [logedIn, setLoginedIn] = useState(false);\n\n  \n  if (localStorage.getItem(\"user\")) {\n    const j = JSON.parse(localStorage.getItem(\"user\"))\n    users.push(...j);\n  }\n  \n\n  \n\n  function updateStore(user) {\n    users.push(user);\n    // console.log(store.user);\n    localStorage.setItem(\"user\", JSON.stringify(users))\n  }\n\n  function signIn(bool = false) {\n    setLoginedIn(bool);\n  }\n  \n  useEffect(() => console.log(logedIn), [logedIn])\n  if (logedIn) {\n    return <MovieList />\n  }\n\n\treturn (\n    \n       \n\n      <div>\n        <div id=\"links\">\n        <Link className=\"link\" to=\"/signup\">Signup</Link>\n        <Link className=\"link\" to=\"/login\">Login</Link>\n        </div>\n      <Switch>\n      <Route component={() => <Signup register={updateStore} user={users}/>} exact path=\"/\" />\n        <Route component={() => <Signup register={updateStore} user={users}/>} exact path=\"/signup\" />\n        <Route component={() => <Login user={users} logedIn={signIn}/>} exact path=\"/login\" />\n      </Switch>\n      </div>\n    \n  \t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom'\nimport \"./index.css\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// import Signup from './Components/Signup';\n// import Login from './Components/Login';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}